name: Step 4 - Synthesize The Bridge Story

on:
  workflow_dispatch:
    inputs:
      storyteller:
        description: "Quem deve narrar o resumo?"
        required: true
        default: "Galadriel"

permissions:
  contents: write
  actions: write
  issues: write
  models: read

env:
  STEP_5_FILE: ".github/steps/5-bridge-farewell.md"
  DISPLAY_LANGUAGE: "pt-BR"

jobs:
  find-workshop-issue:
    name: Find the workshop issue
    uses: lufomatics/reusable-workshops/.github/workflows/find-workshop-issue.yaml@v0.2.1
    with:
      issue-title-text: "Workshop"

  synthesize-story:
    name: Summarize the oracle responses
    runs-on: ubuntu-latest
    needs: [find-workshop-issue]
    if: |
      !github.event.repository.is_template

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Coletar respostas anteriores
        id: gather
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = parseInt('${{ needs.find-workshop-issue.outputs.issue-number }}', 10);
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              per_page: 100
            });

            const gpt41 = comments.find(comment => comment.body?.includes('Crossing The Bridge ‚Ä¢ GPT-4.1'));
            const gpt4o = comments.find(comment => comment.body?.includes('Crossing The Bridge ‚Ä¢ GPT-4o'));

            if (!gpt41 || !gpt4o) {
              core.setFailed('Ainda n√£o encontrei as duas respostas dos or√°culos. Complete as etapas anteriores.');
              return;
            }

            core.setOutput('gpt41', gpt41.body);
            core.setOutput('gpt4o', gpt4o.body);

      - name: Gerar resumo encenado
        id: ai-response
        uses: actions/ai-inference@v1
        with:
          system-prompt: |
            You are GPT-4.1 performing as a storyteller for the Crossing The Bridge workshop.
            Adopt the voice and mannerisms of the specified character while remaining clear and encouraging.
          prompt: |
            You are role-playing as "${{ github.event.inputs.storyteller }}".
            Below are two prior analyses to synthesize for the participant:
            ---
            Response tagged as GPT-4.1:
            ${{ steps.gather.outputs.gpt41 }}
            ---
            Response tagged as GPT-4o:
            ${{ steps.gather.outputs.gpt4o }}
            ---
            Craft a short narrative (up to three paragraphs) that compares the two viewpoints, highlights complementary ideas, and offers one actionable suggestion for what to do next in this repository. Answer in ${{ env.DISPLAY_LANGUAGE }}.
          model: openai/gpt-4.1

      - name: Construir coment√°rio do narrador
        env:
          RESPONSE: ${{ steps.ai-response.outputs.response }}
          STORYTELLER: ${{ github.event.inputs.storyteller }}
        run: |
          python - <<'PY'
          import os
          from pathlib import Path

          response = os.environ['RESPONSE'].strip()
          storyteller = os.environ['STORYTELLER']

          body = f"### Crossing The Bridge ‚Ä¢ Resumo encenado ({storyteller})\n\n{response}\n"
          Path('bridge-summary.md').write_text(body)
          PY

      - name: Publicar resumo na issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ needs.find-workshop-issue.outputs.issue-url }}
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file bridge-summary.md

      - name: Atualizar status no README
        run: |
          python - <<'PY'
          from pathlib import Path

          status = "üé≠ Resumo encenado dispon√≠vel! Feche a issue para concluir o workshop."
          path = Path('README.md')
          text = path.read_text()
          start = '<!--WORKSHOP_STATUS-->'
          end = '<!--END_WORKSHOP_STATUS-->'
          if start not in text or end not in text:
              raise SystemExit('Workshop status markers not found in README.md')
          prefix, _, rest = text.partition(start)
          _, _, suffix = rest.partition(end)
          path.write_text(f"{prefix}{start}{status}{end}{suffix}")
          PY

      - name: Commit status update
        uses: EndBug/add-and-commit@v9
        continue-on-error: true
        with:
          add: README.md
          message: "workshop status: pronto para encerramento"
          default_author: github_actions
          pull: --rebase --autostash

      - name: Publicar instru√ß√µes finais
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_URL: ${{ needs.find-workshop-issue.outputs.issue-url }}
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file "$STEP_5_FILE"

      - name: Alternar workflows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow enable "Step 5 - Farewell Across The Bridge"
          gh workflow disable "Step 4 - Synthesize The Bridge Story"
